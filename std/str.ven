distinct std.str;

expose std;

# Returns whether this string starts with a string *prefix*.
#
# ```
# ensure "foobar".starts-with?("foo") is true;
# ensure "foobar".starts-with?("bar") is false;
# ```
fun<str> starts-with?(prefix) {
  size = #prefix;

  if size > #$ or size is 0 {
    return false
  };

  loop (i = 0; i < size; i++)
    if $[i] is not prefix[i] {
      return false
    };

  true
}

# Returns whether this string starts with a regex *pattern*.
#
# ```
# ensure "aaa".starts-with?(`a+`) is true;
# ensure "baa".starts-with?(`a+`) is false;
# ```
fun<str> starts-with?(pattern) given regex =
  true?($ is pattern);

# Returns whether this string is empty.
#
# ```
# ensure "".empty?() is true;
# ensure "foo".empty?() is false;
# ```
fun<str> empty? =
  true?(#$ is 0);

# Returns whether all characters in this string are the same.
#
# ```
# ensure "".same?() is true;
# ensure "aaa".same?() is true;
# ensure "aba".same?() is false;
# ```
fun<str> same? {
  if $.empty?() {
    return true;
  };

  first = $[0];

  loop (i = 1; i < #$; i++)
    if $[i] is not first {
      return false
    };

  true
}

# Surrounds this string with ANSI escape codes for black
# foreground color.
fun<str> black = "\e[30m$\e[39m";

# Surrounds this string with ANSI escape codes for red
# foreground color.
fun<str> red = "\e[31m$\e[39m";

# Surrounds this string with ANSI escape codes for green
# foreground color.
fun<str> green = "\e[32m$\e[39m";

# Surrounds this string with ANSI escape codes for yellow
# foreground color.
fun<str> yellow = "\e[33m$\e[39m";

# Surrounds this string with ANSI escape codes for blue
# foreground color.
fun<str> blue = "\e[34m$\e[39m";

# Surrounds this string with ANSI escape codes for magenta
# foreground color.
fun<str> magenta = "\e[35m$\e[39m";

# Surrounds this string with ANSI escape codes for cyan
# foreground color.
fun<str> cyan = "\e[36m$\e[39m";

# Surrounds this string with ANSI escape codes for white
# foreground color.
fun<str> white = "\e[37m$\e[39m";

# Surrounds this string with ANSI escape codes for bold text.
fun<str> bold = "\e[1m$\e[0m";

# Surrounds this string with ANSI escape codes for dim text.
fun<str> dim = "\e[2m$\e[0m";

# Surrounds this string with ANSI escape codes for standing
# out (through most often italicization) text.
fun<str> italic = "\e[3m$\e[0m";

# Surrounds this string with ANSI escape codes for underlined
# text.
fun<str> underline = "\e[4m$\e[0m";
